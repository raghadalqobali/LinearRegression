# -*- coding: utf-8 -*-
"""lassoandridgereg.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cMA5pUr5Jrk7ec1Fw__ztx2vyUEjfPRr
"""

from sklearn.linear_model import LinearRegression
from sklearn.linear_model import Lasso
from sklearn.linear_model import Ridge
from sklearn.preprocessing import PolynomialFeatures
from sklearn.metrics import mean_squared_error

from sklearn.datasets import make_regression
from sklearn.model_selection import train_test_split
x_data,y_data=make_regression(n_samples=500, n_features=15,random_state=10)

# split the data with 70% training and 30% testing
X1_train, X1_test, Y1_train, Y1_test = train_test_split(x_data,y_data, test_size=30)

import matplotlib.pyplot as plt
plt.scatter(Y1_train, X1_train[:,0],color='g', s=5,label='X vs Y')
plt.xlabel('x')
plt.ylabel('y')
plt.legend()

# build the model linear regression
lr = LinearRegression()

#Fitting the model
lr = lr.fit(X1_train,Y1_train)

# make prediction on test data
pred_lr = lr.predict(X1_test)
r1_linear = mean_squared_error(Y1_test, pred_lr)
print('mean squared error_linear: {}'.format(r1_linear))

# build the model Lasso regression
lso =Lasso()

#Fitting the model
lso = lso.fit(X1_train,Y1_train)

# make prediction on test data
pred_lso = lso.predict(X1_test)
r1_lso = mean_squared_error(Y1_test, pred_lso)
print('mean squared error_lasso: {}'.format(r1_lso))

# build the model Ridge regression
ridg = Ridge()

#Fitting the model
ridg = ridg.fit(X1_train,Y1_train)


# make prediction on test data
pred_ridg = ridg.predict(X1_test)
r1_ridg = mean_squared_error(Y1_test, pred_ridg)
print('mean squared error_ridge: {}'.format(r1_ridg))

# build the model Polynomial regression

poly_reg = PolynomialFeatures(degree = 3)
X_poly = poly_reg.fit_transform(X1_train)
poly_reg.fit(X_poly,y_data)
lr_poly = LinearRegression()
lr_poly.fit(X_poly, Y1_train)

# make prediction on test data
pred_poly_reg = lr_poly.predict(poly_reg.fit_transform(X1_test))
r1_poly_reg = mean_squared_error(Y1_test, pred_poly_reg)
print('mean squared error_polynomial: {}'.format(r1_poly_reg))

from tabulate import tabulate
table = [["Linear regression",r1_linear],["Lasso regression",r1_lso],
          ["Ridge regression",r1_ridg],["Polynomial regression",r1_poly_reg]]
headers=["regression type", "mean squared error"]
print(tabulate(table,headers,tablefmt="simple"))